name: Linter

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linter:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    strategy:
      matrix:
        elixir-otp:
          # only test the linting on the oldest and newest supported versions
          - elixir: "1.10"
            otp: 22
          - elixir: "1.8"
            otp: 20

    steps:
      - uses: actions/checkout@v2

      - name: Setup Elixir ${{ matrix.elixir-otp.elixir }} OTP ${{ matrix.elixir-otp.otp }}
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.elixir-otp.otp }}
          elixir-version: ${{ matrix.elixir-otp.elixir }}

      - name: dep cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/src/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: PLT Cache
        uses: actions/cache@v2
        env:
          cache-name: dialyxir
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ env.cache-name }}-erlang-${{ matrix.elixir-otp.otp }}_elixir-${{ matrix.elixir-otp.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/src/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-erlang-${{ matrix.elixir-otp.otp }}_elixir-${{ matrix.elixir-otp.elixir }}-
            ${{ runner.os }}-${{ env.cache-name }}-

      - run: mix do deps.get, deps.compile

      - run: mix format --check-formatted

      - run: mix credo --strict

      - run: ls priv/plts

      - run: mix dialyzer
